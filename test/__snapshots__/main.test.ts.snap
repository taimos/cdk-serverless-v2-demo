// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
{
  "Mappings": {
    "ServiceprincipalMap": {
      "af-south-1": {
        "states": "states.af-south-1.amazonaws.com",
      },
      "ap-east-1": {
        "states": "states.ap-east-1.amazonaws.com",
      },
      "ap-northeast-1": {
        "states": "states.ap-northeast-1.amazonaws.com",
      },
      "ap-northeast-2": {
        "states": "states.ap-northeast-2.amazonaws.com",
      },
      "ap-northeast-3": {
        "states": "states.ap-northeast-3.amazonaws.com",
      },
      "ap-south-1": {
        "states": "states.ap-south-1.amazonaws.com",
      },
      "ap-south-2": {
        "states": "states.ap-south-2.amazonaws.com",
      },
      "ap-southeast-1": {
        "states": "states.ap-southeast-1.amazonaws.com",
      },
      "ap-southeast-2": {
        "states": "states.ap-southeast-2.amazonaws.com",
      },
      "ap-southeast-3": {
        "states": "states.ap-southeast-3.amazonaws.com",
      },
      "ap-southeast-4": {
        "states": "states.ap-southeast-4.amazonaws.com",
      },
      "ca-central-1": {
        "states": "states.ca-central-1.amazonaws.com",
      },
      "cn-north-1": {
        "states": "states.cn-north-1.amazonaws.com",
      },
      "cn-northwest-1": {
        "states": "states.cn-northwest-1.amazonaws.com",
      },
      "eu-central-1": {
        "states": "states.eu-central-1.amazonaws.com",
      },
      "eu-central-2": {
        "states": "states.eu-central-2.amazonaws.com",
      },
      "eu-north-1": {
        "states": "states.eu-north-1.amazonaws.com",
      },
      "eu-south-1": {
        "states": "states.eu-south-1.amazonaws.com",
      },
      "eu-south-2": {
        "states": "states.eu-south-2.amazonaws.com",
      },
      "eu-west-1": {
        "states": "states.eu-west-1.amazonaws.com",
      },
      "eu-west-2": {
        "states": "states.eu-west-2.amazonaws.com",
      },
      "eu-west-3": {
        "states": "states.eu-west-3.amazonaws.com",
      },
      "il-central-1": {
        "states": "states.il-central-1.amazonaws.com",
      },
      "me-central-1": {
        "states": "states.me-central-1.amazonaws.com",
      },
      "me-south-1": {
        "states": "states.me-south-1.amazonaws.com",
      },
      "sa-east-1": {
        "states": "states.sa-east-1.amazonaws.com",
      },
      "us-east-1": {
        "states": "states.us-east-1.amazonaws.com",
      },
      "us-east-2": {
        "states": "states.us-east-2.amazonaws.com",
      },
      "us-gov-east-1": {
        "states": "states.us-gov-east-1.amazonaws.com",
      },
      "us-gov-west-1": {
        "states": "states.us-gov-west-1.amazonaws.com",
      },
      "us-iso-east-1": {
        "states": "states.amazonaws.com",
      },
      "us-iso-west-1": {
        "states": "states.amazonaws.com",
      },
      "us-isob-east-1": {
        "states": "states.amazonaws.com",
      },
      "us-west-1": {
        "states": "states.us-west-1.amazonaws.com",
      },
      "us-west-2": {
        "states": "states.us-west-2.amazonaws.com",
      },
    },
  },
  "Outputs": {
    "ApiId": {
      "Value": {
        "Ref": "RestApiFA9A4412",
      },
    },
    "AuthUserPoolIdC0605E59": {
      "Value": {
        "Ref": "AuthUserPool8115E87F",
      },
    },
    "RestApiEndpoint575871DF": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "RestApiFA9A4412",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "RestApiDeploymentStageprod09FC9B34",
            },
            "/",
          ],
        ],
      },
    },
    "SfnArn": {
      "Value": {
        "Fn::GetAtt": [
          "Workflow193EF7C1",
          "Arn",
        ],
      },
    },
    "Table": {
      "Value": {
        "Ref": "DatastoreBBD23A29",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AuthPreTokenGenerationFunctionFDCABDDD": {
      "DependsOn": [
        "AuthPreTokenGenerationFunctionServiceRole7DBD718D",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "964b16616d1de437fcf32268fc89e4256b1e661c647fd3c0b222cd4d94e14657.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AuthPreTokenGenerationFunctionServiceRole7DBD718D",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuthPreTokenGenerationFunctionServiceRole7DBD718D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuthUserPool8115E87F": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": true,
        },
        "AutoVerifiedAttributes": [
          "email",
        ],
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "LambdaConfig": {
          "PreTokenGeneration": {
            "Fn::GetAtt": [
              "AuthPreTokenGenerationFunctionFDCABDDD",
              "Arn",
            ],
          },
        },
        "Policies": {
          "PasswordPolicy": {
            "MinimumLength": 12,
            "RequireLowercase": false,
            "RequireNumbers": false,
            "RequireSymbols": false,
            "RequireUppercase": false,
          },
        },
        "Schema": [
          {
            "Mutable": true,
            "Name": "name",
            "Required": true,
          },
          {
            "Mutable": false,
            "Name": "email",
            "Required": true,
          },
        ],
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserPoolName": "myPool",
        "UsernameAttributes": [
          "email",
        ],
        "UsernameConfiguration": {
          "CaseSensitive": false,
        },
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Retain",
    },
    "AuthUserPoolPreTokenGenerationCognito6E456AA2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AuthPreTokenGenerationFunctionFDCABDDD",
            "Arn",
          ],
        },
        "Principal": "cognito-idp.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "AuthUserPool8115E87F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DatastoreBBD23A29": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "PK",
            "AttributeType": "S",
          },
          {
            "AttributeName": "SK",
            "AttributeType": "S",
          },
          {
            "AttributeName": "GSI1PK",
            "AttributeType": "S",
          },
          {
            "AttributeName": "GSI1SK",
            "AttributeType": "S",
          },
          {
            "AttributeName": "lastUpdated",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "GSI1",
            "KeySchema": [
              {
                "AttributeName": "GSI1PK",
                "KeyType": "HASH",
              },
              {
                "AttributeName": "GSI1SK",
                "KeyType": "RANGE",
              },
            ],
            "Projection": {
              "ProjectionType": "ALL",
            },
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "PK",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "SK",
            "KeyType": "RANGE",
          },
        ],
        "LocalSecondaryIndexes": [
          {
            "IndexName": "LSI1",
            "KeySchema": [
              {
                "AttributeName": "PK",
                "KeyType": "HASH",
              },
              {
                "AttributeName": "lastUpdated",
                "KeyType": "RANGE",
              },
            ],
            "Projection": {
              "NonKeyAttributes": [
                "id",
                "lastUpdated",
                "title",
              ],
              "ProjectionType": "INCLUDE",
            },
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "RestApiAccount4EF2B2A0": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "RestApiFA9A4412",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "RestApiCloudWatchRoleC10412B9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "RestApiCloudWatchRoleC10412B9": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "RestApiDeploymentEFEC237023523924dbcca57f04bf7287a6ccab6d": {
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "RestApiFA9A4412",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "RestApiDeploymentStageprod09FC9B34": {
      "DependsOn": [
        "RestApiAccount4EF2B2A0",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "RestApiDeploymentEFEC237023523924dbcca57f04bf7287a6ccab6d",
        },
        "RestApiId": {
          "Ref": "RestApiFA9A4412",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "RestApiFA9A4412": {
      "Properties": {
        "Body": {
          "components": {
            "schemas": {
              "AddTodo": {
                "properties": {
                  "description": {
                    "type": "string",
                  },
                  "title": {
                    "type": "string",
                  },
                },
                "required": [
                  "title",
                  "description",
                ],
                "type": "object",
              },
              "Todo": {
                "properties": {
                  "description": {
                    "type": "string",
                  },
                  "id": {
                    "type": "string",
                  },
                  "lastUpdate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "state": {
                    "type": "string",
                  },
                  "title": {
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                  "state",
                  "title",
                  "description",
                  "lastUpdate",
                ],
                "type": "object",
              },
            },
          },
          "info": {
            "contact": {
              "email": "info@taimos.de",
              "name": "Thorsten Höger",
            },
            "license": {
              "name": "free to use",
            },
            "title": "Serverless Demo",
            "version": "1.0",
          },
          "openapi": "3.0.1",
          "paths": {
            "/openapi.json": {
              "get": {
                "description": "Returns the raw OpenAPI spec of this API",
                "operationId": "_spec",
                "responses": {
                  "200": {
                    "content": {
                      "application/openapi+json": {},
                    },
                    "description": "OpenAPI spec of this API",
                  },
                },
                "summary": "Returns the raw OpenAPI spec of this API",
                "x-amazon-apigateway-integration": {
                  "httpMethod": "GET",
                  "payloadFormatVersion": "1.0",
                  "requestTemplates": {
                    "application/json": "{'statusCode': 200}",
                  },
                  "responses": {
                    "200": {
                      "responseTemplates": {
                        "application/openapi+json": "{"openapi":"3.0.1","info":{"title":"Serverless Demo","contact":{"name":"Thorsten Höger","email":"info@taimos.de"},"license":{"name":"free to use"},"version":"1.0"},"tags":[{"name":"info"},{"name":"admin"}],"paths":{"/todos":{"get":{"tags":["admin"],"summary":"return list of todos","operationId":"getTodos","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Todo"}}},"text/calendar":{"schema":{"type":"string"}}}}}},"post":{"tags":["admin"],"summary":"add new todo","operationId":"addTodo","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddTodo"}}}},"responses":{"201":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Todo"}}}},"401":{"description":"you are not logged in","content":{}},"403":{"description":"you are not authorized to add todos","content":{}}}}},"/todos/{id}":{"get":{"tags":["admin"],"summary":"get a todo by its id","operationId":"getTodoById","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Todo"}}}}}},"delete":{"tags":["admin"],"summary":"delete a todo","operationId":"removeTodo","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"successful operation","content":{}},"401":{"description":"you are not logged in","content":{}},"403":{"description":"you are not authorized to remove todos","content":{}}}}}},"components":{"schemas":{"Todo":{"type":"object","required":["id","state","title","description","lastUpdate"],"properties":{"id":{"type":"string"},"state":{"type":"string"},"title":{"type":"string"},"description":{"type":"string"},"lastUpdate":{"type":"string","format":"date-time"}}},"AddTodo":{"type":"object","required":["title","description"],"properties":{"title":{"type":"string"},"description":{"type":"string"}}}}}}",
                      },
                      "statusCode": 200,
                    },
                  },
                  "type": "mock",
                },
              },
            },
            "/todos": {
              "get": {
                "operationId": "getTodos",
                "responses": {
                  "200": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "items": {
                            "$ref": "#/components/schemas/Todo",
                          },
                          "type": "array",
                        },
                      },
                      "text/calendar": {
                        "schema": {
                          "type": "string",
                        },
                      },
                    },
                    "description": "successful operation",
                  },
                },
                "summary": "return list of todos",
                "tags": [
                  "admin",
                ],
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_templates",
                  "payloadFormatVersion": "1.0",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "RestApiFngetTodos84695404",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
              "post": {
                "operationId": "addTodo",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AddTodo",
                      },
                    },
                  },
                  "required": true,
                },
                "responses": {
                  "201": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Todo",
                        },
                      },
                    },
                    "description": "successful operation",
                  },
                  "401": {
                    "content": {},
                    "description": "you are not logged in",
                  },
                  "403": {
                    "content": {},
                    "description": "you are not authorized to add todos",
                  },
                },
                "summary": "add new todo",
                "tags": [
                  "admin",
                ],
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_templates",
                  "payloadFormatVersion": "1.0",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "RestApiFnaddTodoBD56C0AE",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
                "x-codegen-request-body-name": "body",
              },
            },
            "/todos/{id}": {
              "delete": {
                "operationId": "removeTodo",
                "parameters": [
                  {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                      "type": "string",
                    },
                  },
                ],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "successful operation",
                  },
                  "401": {
                    "content": {},
                    "description": "you are not logged in",
                  },
                  "403": {
                    "content": {},
                    "description": "you are not authorized to remove todos",
                  },
                },
                "summary": "delete a todo",
                "tags": [
                  "admin",
                ],
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_templates",
                  "payloadFormatVersion": "1.0",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "RestApiFnremoveTodo0814FD47",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
              "get": {
                "operationId": "getTodoById",
                "parameters": [
                  {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                      "type": "string",
                    },
                  },
                ],
                "responses": {
                  "200": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Todo",
                        },
                      },
                    },
                    "description": "successful operation",
                  },
                },
                "summary": "get a todo by its id",
                "tags": [
                  "admin",
                ],
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_templates",
                  "payloadFormatVersion": "1.0",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "RestApiFngetTodoById15730978",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "options": {
                "description": "Enable CORS by returning correct headers",
                "responses": {
                  "200": {
                    "content": {},
                    "description": "Default response for CORS method",
                    "headers": {
                      "Access-Control-Allow-Credentials": {
                        "schema": {
                          "type": "string",
                        },
                      },
                      "Access-Control-Allow-Headers": {
                        "schema": {
                          "type": "string",
                        },
                      },
                      "Access-Control-Allow-Methods": {
                        "schema": {
                          "type": "string",
                        },
                      },
                      "Access-Control-Allow-Origin": {
                        "schema": {
                          "type": "string",
                        },
                      },
                    },
                  },
                },
                "summary": "CORS support",
                "tags": [
                  "CORS",
                ],
                "x-amazon-apigateway-integration": {
                  "requestTemplates": {
                    "application/json": "#set($context.requestOverride.header.origin = $method.request.header.origin)
{
  "statusCode" : 200
}
",
                  },
                  "responses": {
                    "default": {
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Credentials": "'true'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                        "method.response.header.Access-Control-Allow-Methods": "'PUT,GET,POST,DELETE,PATCH,HEAD,OPTIONS'",
                        "method.response.header.Access-Control-Allow-Origin": "context.requestOverride.header.origin",
                      },
                      "responseTemplates": {
                        "application/json": "{}",
                      },
                      "statusCode": "200",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
          "tags": [
            {
              "name": "info",
            },
            {
              "name": "admin",
            },
          ],
        },
        "Name": "MyApi [dev]",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "RestApiFnaddTodoBD56C0AE": {
      "DependsOn": [
        "RestApiFnaddTodoServiceRoleDefaultPolicy8F89B21E",
        "RestApiFnaddTodoServiceRoleC30FAF74",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "3453127a34e7b5cace2e0c2a7a4015ac832169693fc6eb7df4faa2cb22d1b7c2.zip",
        },
        "Description": "[dev] post /todos - add new todo",
        "Environment": {
          "Variables": {
            "STAGE": "dev",
            "TABLE": {
              "Ref": "DatastoreBBD23A29",
            },
            "USER_POOL_ID": {
              "Ref": "AuthUserPool8115E87F",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "RestApiFnaddTodoServiceRoleC30FAF74",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Tags": [
          {
            "Key": "OpenAPI",
            "Value": "post /todos - add new todo",
          },
        ],
      },
      "Type": "AWS::Lambda::Function",
    },
    "RestApiFnaddTodoRestApiInvoke1CEC24C3": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RestApiFnaddTodoBD56C0AE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApiFA9A4412",
              },
              "/*/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApiFnaddTodoServiceRoleC30FAF74": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "OpenAPI",
            "Value": "post /todos - add new todo",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RestApiFnaddTodoServiceRoleDefaultPolicy8F89B21E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DatastoreBBD23A29",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DatastoreBBD23A29",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RestApiFnaddTodoServiceRoleDefaultPolicy8F89B21E",
        "Roles": [
          {
            "Ref": "RestApiFnaddTodoServiceRoleC30FAF74",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RestApiFngetTodoById15730978": {
      "DependsOn": [
        "RestApiFngetTodoByIdServiceRoleDefaultPolicy4787C2B2",
        "RestApiFngetTodoByIdServiceRole63DF489C",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "a351ac285c15c6af18fcc39869f5e9a2f72662453bfb7b7851e644850b6769fe.zip",
        },
        "Description": "[dev] get /todos/{id} - get a todo by its id",
        "Environment": {
          "Variables": {
            "STAGE": "dev",
            "TABLE": {
              "Ref": "DatastoreBBD23A29",
            },
            "USER_POOL_ID": {
              "Ref": "AuthUserPool8115E87F",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "RestApiFngetTodoByIdServiceRole63DF489C",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Tags": [
          {
            "Key": "OpenAPI",
            "Value": "get /todos/id - get a todo by its id",
          },
        ],
      },
      "Type": "AWS::Lambda::Function",
    },
    "RestApiFngetTodoByIdRestApiInvokeA9609D36": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RestApiFngetTodoById15730978",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApiFA9A4412",
              },
              "/*/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApiFngetTodoByIdServiceRole63DF489C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "OpenAPI",
            "Value": "get /todos/id - get a todo by its id",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RestApiFngetTodoByIdServiceRoleDefaultPolicy4787C2B2": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DatastoreBBD23A29",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DatastoreBBD23A29",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RestApiFngetTodoByIdServiceRoleDefaultPolicy4787C2B2",
        "Roles": [
          {
            "Ref": "RestApiFngetTodoByIdServiceRole63DF489C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RestApiFngetTodos84695404": {
      "DependsOn": [
        "RestApiFngetTodosServiceRoleDefaultPolicyC5B84BA4",
        "RestApiFngetTodosServiceRole432001C6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "484fb0024447e8469a53e7d1468fdf370a48fc2ec9eedfd7c7e959ee05a6cf55.zip",
        },
        "Description": "[dev] get /todos - return list of todos",
        "Environment": {
          "Variables": {
            "STAGE": "dev",
            "TABLE": {
              "Ref": "DatastoreBBD23A29",
            },
            "USER_POOL_ID": {
              "Ref": "AuthUserPool8115E87F",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "RestApiFngetTodosServiceRole432001C6",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Tags": [
          {
            "Key": "OpenAPI",
            "Value": "get /todos - return list of todos",
          },
        ],
      },
      "Type": "AWS::Lambda::Function",
    },
    "RestApiFngetTodosRestApiInvokeFE87AE05": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RestApiFngetTodos84695404",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApiFA9A4412",
              },
              "/*/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApiFngetTodosServiceRole432001C6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "OpenAPI",
            "Value": "get /todos - return list of todos",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RestApiFngetTodosServiceRoleDefaultPolicyC5B84BA4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DatastoreBBD23A29",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DatastoreBBD23A29",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RestApiFngetTodosServiceRoleDefaultPolicyC5B84BA4",
        "Roles": [
          {
            "Ref": "RestApiFngetTodosServiceRole432001C6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RestApiFnremoveTodo0814FD47": {
      "DependsOn": [
        "RestApiFnremoveTodoServiceRoleDefaultPolicy44ABB24C",
        "RestApiFnremoveTodoServiceRole791BD4D5",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "d58d9807e5f7251148ef53699af379efe23542131dc75475ba9abd7df085f596.zip",
        },
        "Description": "[dev] delete /todos/{id} - delete a todo",
        "Environment": {
          "Variables": {
            "STAGE": "dev",
            "TABLE": {
              "Ref": "DatastoreBBD23A29",
            },
            "USER_POOL_ID": {
              "Ref": "AuthUserPool8115E87F",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "RestApiFnremoveTodoServiceRole791BD4D5",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Tags": [
          {
            "Key": "OpenAPI",
            "Value": "delete /todos/id - delete a todo",
          },
        ],
      },
      "Type": "AWS::Lambda::Function",
    },
    "RestApiFnremoveTodoRestApiInvokeF6CD2233": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RestApiFnremoveTodo0814FD47",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApiFA9A4412",
              },
              "/*/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApiFnremoveTodoServiceRole791BD4D5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "OpenAPI",
            "Value": "delete /todos/id - delete a todo",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RestApiFnremoveTodoServiceRoleDefaultPolicy44ABB24C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DatastoreBBD23A29",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DatastoreBBD23A29",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RestApiFnremoveTodoServiceRoleDefaultPolicy44ABB24C",
        "Roles": [
          {
            "Ref": "RestApiFnremoveTodoServiceRole791BD4D5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Workflow193EF7C1": {
      "DependsOn": [
        "WorkflowRoleDefaultPolicy3B788295",
        "WorkflowRole98C7DC98",
      ],
      "Properties": {
        "DefinitionS3Location": {
          "Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "Key": "c2b93e6304d63d104d229a6dcf32fa62ac26bf5a0ac50d91d46333de4a711fc3.json",
        },
        "DefinitionSubstitutions": {
          "reminderLambda#LambdaFunction": {
            "Fn::GetAtt": [
              "RestApiFnaddTodoBD56C0AE",
              "Arn",
            ],
          },
          "stageName": "dev",
          "table#DynamoDBTable": {
            "Ref": "DatastoreBBD23A29",
          },
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "WorkflowRole98C7DC98",
            "Arn",
          ],
        },
        "StateMachineType": "STANDARD",
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "WorkflowRole98C7DC98": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::FindInMap": [
                    "ServiceprincipalMap",
                    {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "WorkflowRoleDefaultPolicy3B788295": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RestApiFnaddTodoBD56C0AE",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RestApiFnaddTodoBD56C0AE",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DatastoreBBD23A29",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DatastoreBBD23A29",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "WorkflowRoleDefaultPolicy3B788295",
        "Roles": [
          {
            "Ref": "WorkflowRole98C7DC98",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
